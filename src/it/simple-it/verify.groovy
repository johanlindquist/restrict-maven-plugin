def file = new File(basedir, 'target/restrict-maven-plugin.txt')
assert file.exists()
def report = file.getText()

assert report.contains("org.apache.commons.io.FileUtils to: java.nio.ByteBuffer")
assert report.contains("org.apache.commons.io.FileUtils to: java.nio.CharBuffer")
assert report.contains("org.apache.commons.io.FileUtils to: java.nio.charset.Charset")
assert report.contains("org.apache.commons.io.FileUtils to: java.nio.channels.ReadableByteChannel")
assert report.contains("org.apache.commons.io.FileUtils to: java.nio.channels.FileChannel")
assert report.contains("org.apache.commons.io.input.ProxyReader to: java.nio.CharBuffer")
assert report.contains("org.apache.commons.io.input.ReaderInputStream to: java.nio.CharBuffer")
assert report.contains("org.apache.commons.io.input.ReaderInputStream to: java.nio.ByteBuffer")
assert report.contains("org.apache.commons.io.input.ReaderInputStream to: java.nio.charset.CoderResult")
assert report.contains("org.apache.commons.io.input.ReaderInputStream to: java.nio.charset.Charset")
assert report.contains("org.apache.commons.io.input.ReaderInputStream to: java.nio.charset.CharsetEncoder")
assert report.contains("org.apache.commons.io.input.ReaderInputStream to: java.nio.charset.CodingErrorAction")
assert report.contains("org.apache.commons.io.output.FileWriterWithEncoding to: java.nio.charset.Charset")
assert report.contains("org.apache.commons.io.output.FileWriterWithEncoding to: java.nio.charset.CharsetEncoder")
assert report.contains("org.apache.commons.io.output.WriterOutputStream to: java.nio.CharBuffer")
assert report.contains("org.apache.commons.io.output.WriterOutputStream to: java.nio.charset.CharsetDecoder")
assert report.contains("org.apache.commons.io.output.WriterOutputStream to: java.nio.ByteBuffer")
assert report.contains("org.apache.commons.io.output.WriterOutputStream to: java.nio.charset.CoderResult")
assert report.contains("org.apache.commons.io.output.WriterOutputStream to: java.nio.charset.Charset")
assert report.contains("org.apache.commons.io.output.WriterOutputStream to: java.nio.charset.CodingErrorAction")
assert report.contains("com.yamanyar.test.MyTestAbc to: sun.net.www.http.HttpClient")
assert report.contains("com.yamanyar.test.MyTestAbc to: java.io.PrintStream.println()")
assert report.contains("com.yamanyar.test.MyTestAbc to: java.util.regex.Matcher")
assert report.contains("Build is broken due to 23 restriction policies!")
assert report.contains("Build is not broken since continueOnError is set to true!")